{
  "uid" : "e97cdc652ba543e5",
  "name" : "测试进入媒体官网",
  "fullName" : "TestCase.index_test_case.test_body.TestBody#test_003",
  "historyId" : "32221ad8deb4bfa7718c5b429acdbef0",
  "time" : {
    "start" : 1654653691813,
    "stop" : 1654653992403,
    "duration" : 300590
  },
  "description" : "进入媒体官网",
  "descriptionHtml" : "<p>进入媒体官网</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=98.0.4758.82)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00AFA0A3+2597027]\n\tOrdinal0 [0x00A8BA61+2144865]\n\tOrdinal0 [0x00983C58+1064024]\n\tOrdinal0 [0x009758D7+1005783]\n\tOrdinal0 [0x009748D7+1001687]\n\tOrdinal0 [0x00974CA7+1002663]\n\tOrdinal0 [0x0097F14F+1044815]\n\tOrdinal0 [0x0098998B+1087883]\n\tOrdinal0 [0x0098C0A0+1097888]\n\tOrdinal0 [0x00974FA6+1003430]\n\tOrdinal0 [0x00989835+1087541]\n\tOrdinal0 [0x009D8DE6+1412582]\n\tOrdinal0 [0x009C85C6+1344966]\n\tOrdinal0 [0x009A54C6+1201350]\n\tOrdinal0 [0x009A63B6+1205174]\n\tGetHandleVerifier [0x00CA10A2+1681842]\n\tGetHandleVerifier [0x00D53B0C+2413596]\n\tGetHandleVerifier [0x00B91221+568113]\n\tGetHandleVerifier [0x00B8FFA3+563379]\n\tOrdinal0 [0x00A9174E+2168654]\n\tOrdinal0 [0x00A96538+2188600]\n\tOrdinal0 [0x00A96680+2188928]\n\tOrdinal0 [0x00AA030C+2229004]\n\tBaseThreadInitThunk [0x7717FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x777D7A7E+286]\n\tRtlGetAppContainerNamedObjectPath [0x777D7A4E+238]",
  "statusTrace" : "self = <pytest_project.TestCase.index_test_case.test_body.TestBody object at 0x000002B5C9F42760>\nmedia_name = 'iMore', url = 'https://www.imore.com/'\n\n    @allure.title('测试进入媒体官网')\n    @allure.severity('blocker')\n    @pytest.mark.parametrize('media_name,url', getExcelAllData('媒体按钮对应的网站', 'index/index.xlsx'))\n    def test_003(self, media_name, url):\n        \"\"\"进入媒体官网\"\"\"\n        allure.dynamic.tag(f'进入{media_name}媒体官网')\n>       self.driver.click_media(media_name)\n\nTestCase\\index_test_case\\test_body.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\index\\body_page.py:26: in click_media\n    self.scroll_to_loc_is_click(body.readYaml(f'$.media.{name}'))\npage\\basepage.py:219: in scroll_to_loc_is_click\n    div.click()\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:80: in click\n    self._execute(Command.CLICK_ELEMENT)\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:693: in _execute\n    return self._parent.execute(command, params)\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:418: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002B5FD409040>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x777D7A7E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x777D7A4E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: headless chrome=98.0.4758.82)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00AFA0A3+2597027]\nE       \tOrdinal0 [0x00A8BA61+2144865]\nE       \tOrdinal0 [0x00983C58+1064024]\nE       \tOrdinal0 [0x009758D7+1005783]\nE       \tOrdinal0 [0x009748D7+1001687]\nE       \tOrdinal0 [0x00974CA7+1002663]\nE       \tOrdinal0 [0x0097F14F+1044815]\nE       \tOrdinal0 [0x0098998B+1087883]\nE       \tOrdinal0 [0x0098C0A0+1097888]\nE       \tOrdinal0 [0x00974FA6+1003430]\nE       \tOrdinal0 [0x00989835+1087541]\nE       \tOrdinal0 [0x009D8DE6+1412582]\nE       \tOrdinal0 [0x009C85C6+1344966]\nE       \tOrdinal0 [0x009A54C6+1201350]\nE       \tOrdinal0 [0x009A63B6+1205174]\nE       \tGetHandleVerifier [0x00CA10A2+1681842]\nE       \tGetHandleVerifier [0x00D53B0C+2413596]\nE       \tGetHandleVerifier [0x00B91221+568113]\nE       \tGetHandleVerifier [0x00B8FFA3+563379]\nE       \tOrdinal0 [0x00A9174E+2168654]\nE       \tOrdinal0 [0x00A96538+2188600]\nE       \tOrdinal0 [0x00A96680+2188928]\nE       \tOrdinal0 [0x00AA030C+2229004]\nE       \tBaseThreadInitThunk [0x7717FA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x777D7A7E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x777D7A4E+238]\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:243: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1654653608516,
      "stop" : 1654653608616,
      "duration" : 100
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1654653608616,
      "stop" : 1654653608616,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1654653608616,
      "stop" : 1654653608616,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "drivers",
    "time" : {
      "start" : 1654653608616,
      "stop" : 1654653609762,
      "duration" : 1146
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1654653609762,
      "stop" : 1654653609762,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "open_index",
    "time" : {
      "start" : 1654653691516,
      "stop" : 1654653691811,
      "duration" : 295
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1654653691516,
      "stop" : 1654653691516,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "进入媒体官网",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=98.0.4758.82)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00AFA0A3+2597027]\n\tOrdinal0 [0x00A8BA61+2144865]\n\tOrdinal0 [0x00983C58+1064024]\n\tOrdinal0 [0x009758D7+1005783]\n\tOrdinal0 [0x009748D7+1001687]\n\tOrdinal0 [0x00974CA7+1002663]\n\tOrdinal0 [0x0097F14F+1044815]\n\tOrdinal0 [0x0098998B+1087883]\n\tOrdinal0 [0x0098C0A0+1097888]\n\tOrdinal0 [0x00974FA6+1003430]\n\tOrdinal0 [0x00989835+1087541]\n\tOrdinal0 [0x009D8DE6+1412582]\n\tOrdinal0 [0x009C85C6+1344966]\n\tOrdinal0 [0x009A54C6+1201350]\n\tOrdinal0 [0x009A63B6+1205174]\n\tGetHandleVerifier [0x00CA10A2+1681842]\n\tGetHandleVerifier [0x00D53B0C+2413596]\n\tGetHandleVerifier [0x00B91221+568113]\n\tGetHandleVerifier [0x00B8FFA3+563379]\n\tOrdinal0 [0x00A9174E+2168654]\n\tOrdinal0 [0x00A96538+2188600]\n\tOrdinal0 [0x00A96680+2188928]\n\tOrdinal0 [0x00AA030C+2229004]\n\tBaseThreadInitThunk [0x7717FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x777D7A7E+286]\n\tRtlGetAppContainerNamedObjectPath [0x777D7A4E+238]",
    "statusTrace" : "self = <pytest_project.TestCase.index_test_case.test_body.TestBody object at 0x000002B5C9F42760>\nmedia_name = 'iMore', url = 'https://www.imore.com/'\n\n    @allure.title('测试进入媒体官网')\n    @allure.severity('blocker')\n    @pytest.mark.parametrize('media_name,url', getExcelAllData('媒体按钮对应的网站', 'index/index.xlsx'))\n    def test_003(self, media_name, url):\n        \"\"\"进入媒体官网\"\"\"\n        allure.dynamic.tag(f'进入{media_name}媒体官网')\n>       self.driver.click_media(media_name)\n\nTestCase\\index_test_case\\test_body.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\index\\body_page.py:26: in click_media\n    self.scroll_to_loc_is_click(body.readYaml(f'$.media.{name}'))\npage\\basepage.py:219: in scroll_to_loc_is_click\n    div.click()\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:80: in click\n    self._execute(Command.CLICK_ELEMENT)\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:693: in _execute\n    return self._parent.execute(command, params)\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:418: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002B5FD409040>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x777D7A7E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x777D7A4E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: headless chrome=98.0.4758.82)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00AFA0A3+2597027]\nE       \tOrdinal0 [0x00A8BA61+2144865]\nE       \tOrdinal0 [0x00983C58+1064024]\nE       \tOrdinal0 [0x009758D7+1005783]\nE       \tOrdinal0 [0x009748D7+1001687]\nE       \tOrdinal0 [0x00974CA7+1002663]\nE       \tOrdinal0 [0x0097F14F+1044815]\nE       \tOrdinal0 [0x0098998B+1087883]\nE       \tOrdinal0 [0x0098C0A0+1097888]\nE       \tOrdinal0 [0x00974FA6+1003430]\nE       \tOrdinal0 [0x00989835+1087541]\nE       \tOrdinal0 [0x009D8DE6+1412582]\nE       \tOrdinal0 [0x009C85C6+1344966]\nE       \tOrdinal0 [0x009A54C6+1201350]\nE       \tOrdinal0 [0x009A63B6+1205174]\nE       \tGetHandleVerifier [0x00CA10A2+1681842]\nE       \tGetHandleVerifier [0x00D53B0C+2413596]\nE       \tGetHandleVerifier [0x00B91221+568113]\nE       \tGetHandleVerifier [0x00B8FFA3+563379]\nE       \tOrdinal0 [0x00A9174E+2168654]\nE       \tOrdinal0 [0x00A96538+2188600]\nE       \tOrdinal0 [0x00A96680+2188928]\nE       \tOrdinal0 [0x00AA030C+2229004]\nE       \tBaseThreadInitThunk [0x7717FA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x777D7A7E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x777D7A4E+238]\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:243: TimeoutException",
    "steps" : [ {
      "name" : "点击媒体iMore链接",
      "time" : {
        "start" : 1654653691813,
        "stop" : 1654653992401,
        "duration" : 300588
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=98.0.4758.82)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00AFA0A3+2597027]\n\tOrdinal0 [0x00A8BA61+2144865]\n\tOrdinal0 [0x00983C58+1064024]\n\tOrdinal0 [0x009758D7+1005783]\n\tOrdinal0 [0x009748D7+1001687]\n\tOrdinal0 [0x00974CA7+1002663]\n\tOrdinal0 [0x0097F14F+1044815]\n\tOrdinal0 [0x0098998B+1087883]\n\tOrdinal0 [0x0098C0A0+1097888]\n\tOrdinal0 [0x00974FA6+1003430]\n\tOrdinal0 [0x00989835+1087541]\n\tOrdinal0 [0x009D8DE6+1412582]\n\tOrdinal0 [0x009C85C6+1344966]\n\tOrdinal0 [0x009A54C6+1201350]\n\tOrdinal0 [0x009A63B6+1205174]\n\tGetHandleVerifier [0x00CA10A2+1681842]\n\tGetHandleVerifier [0x00D53B0C+2413596]\n\tGetHandleVerifier [0x00B91221+568113]\n\tGetHandleVerifier [0x00B8FFA3+563379]\n\tOrdinal0 [0x00A9174E+2168654]\n\tOrdinal0 [0x00A96538+2188600]\n\tOrdinal0 [0x00A96680+2188928]\n\tOrdinal0 [0x00AA030C+2229004]\n\tBaseThreadInitThunk [0x7717FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x777D7A7E+286]\n\tRtlGetAppContainerNamedObjectPath [0x777D7A4E+238]\n\n",
      "statusTrace" : "  File \"D:\\auto_test_iMyMac\\pytest_project\\page_object\\index\\body_page.py\", line 26, in click_media\n    self.scroll_to_loc_is_click(body.readYaml(f'$.media.{name}'))\n  File \"D:\\auto_test_iMyMac\\pytest_project\\page\\basepage.py\", line 219, in scroll_to_loc_is_click\n    div.click()\n  File \"c:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 80, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"c:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 693, in _execute\n    return self._parent.execute(command, params)\n  File \"c:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 418, in execute\n    self.error_handler.check_response(response)\n  File \"c:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 243, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    }, {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1654653992436,
        "stop" : 1654653993248,
        "duration" : 812
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "3c177bdec1afb4ea",
        "name" : "失败截图",
        "source" : "3c177bdec1afb4ea.png",
        "type" : "image/png",
        "size" : 1340823
      } ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "187cb6b0aecb5a0e",
      "name" : "log",
      "source" : "187cb6b0aecb5a0e.txt",
      "type" : "text/plain",
      "size" : 199
    }, {
      "uid" : "5a3aa112aeb601dd",
      "name" : "stderr",
      "source" : "5a3aa112aeb601dd.txt",
      "type" : "text/plain",
      "size" : 216
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 2,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "drivers::0",
    "time" : {
      "start" : 1654654689229,
      "stop" : 1654654691386,
      "duration" : 2157
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "进入iMore媒体官网"
  }, {
    "name" : "feature",
    "value" : "首页测试"
  }, {
    "name" : "story",
    "value" : "body内容测试"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase.index_test_case"
  }, {
    "name" : "suite",
    "value" : "test_body"
  }, {
    "name" : "subSuite",
    "value" : "TestBody"
  }, {
    "name" : "host",
    "value" : "DESKTOP-9RE2F6C"
  }, {
    "name" : "thread",
    "value" : "9740-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.index_test_case.test_body"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "media_name",
    "value" : "'iMore'"
  }, {
    "name" : "url",
    "value" : "'https://www.imore.com/'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "进入iMore媒体官网" ]
  },
  "source" : "e97cdc652ba543e5.json",
  "parameterValues" : [ "'iMore'", "'https://www.imore.com/'" ]
}