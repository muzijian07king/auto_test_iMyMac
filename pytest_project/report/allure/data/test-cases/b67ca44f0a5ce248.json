{
  "uid" : "b67ca44f0a5ce248",
  "name" : "搜索不到文章测试",
  "fullName" : "TestCase.faq_test_case.test_index.TestBody#test_005",
  "historyId" : "1ec0ee3981a5926ec465cae91c3e54d1",
  "time" : {
    "start" : 1637660457735,
    "stop" : 1637660522266,
    "duration" : 64531
  },
  "description" : "搜索不到文章功能测试",
  "descriptionHtml" : "<p>搜索不到文章功能测试</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <pytest_project.TestCase.faq_test_case.test_index.TestBody object at 0x00000255DD2F4070>\nfaq_name = 'General-FAQs', search = 'adggwgwdqw'\n\n    @pytest.mark.parametrize('faq_name', get_branch_all_keys().get_branch_all_keys(faq.data, 'FAQS'))\n    @pytest.mark.parametrize('search', getExcelOneCol('搜索不到文章', 1, 'Support/support.xlsx'))\n    @allure.title('搜索不到文章测试')\n    @allure.severity('minor')\n    @pytest.mark.skipif(cm.VPN_Switch, reason='阿里云没有VPN')\n    def test_005(self, faq_name, search):\n        \"\"\"搜索不到文章功能测试\"\"\"\n        allure.dynamic.tag('搜索文章，关键字为==》{}'.format(search))\n        self.driver.go_to_faq(faq_name)\n        self.driver.search_input(search)\n        self.driver.click_search_button()\n>       assert self.driver.return_fail_search()\n\nTestCase\\faq_test_case\\test_index.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\faq\\faqs_page.py:55: in return_fail_search\n    return self.find_element(faqs['no-results']) is not None\npage\\basepage.py:49: in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\npage\\basepage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\basepage.py:49: in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"84e5264b8fa7ebf52a13e7519463f37e\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x00000255DD30D7C0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1637660374487,
      "stop" : 1637660374673,
      "duration" : 186
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1637660374673,
      "stop" : 1637660374674,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1637660374674,
      "stop" : 1637660374674,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "drivers",
    "time" : {
      "start" : 1637660374674,
      "stop" : 1637660377968,
      "duration" : 3294
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1637660377969,
      "stop" : 1637660377969,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1637660456100,
      "stop" : 1637660456101,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "open_url",
    "time" : {
      "start" : 1637660456101,
      "stop" : 1637660457734,
      "duration" : 1633
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "搜索不到文章功能测试",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <pytest_project.TestCase.faq_test_case.test_index.TestBody object at 0x00000255DD2F4070>\nfaq_name = 'General-FAQs', search = 'adggwgwdqw'\n\n    @pytest.mark.parametrize('faq_name', get_branch_all_keys().get_branch_all_keys(faq.data, 'FAQS'))\n    @pytest.mark.parametrize('search', getExcelOneCol('搜索不到文章', 1, 'Support/support.xlsx'))\n    @allure.title('搜索不到文章测试')\n    @allure.severity('minor')\n    @pytest.mark.skipif(cm.VPN_Switch, reason='阿里云没有VPN')\n    def test_005(self, faq_name, search):\n        \"\"\"搜索不到文章功能测试\"\"\"\n        allure.dynamic.tag('搜索文章，关键字为==》{}'.format(search))\n        self.driver.go_to_faq(faq_name)\n        self.driver.search_input(search)\n        self.driver.click_search_button()\n>       assert self.driver.return_fail_search()\n\nTestCase\\faq_test_case\\test_index.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\faq\\faqs_page.py:55: in return_fail_search\n    return self.find_element(faqs['no-results']) is not None\npage\\basepage.py:49: in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\npage\\basepage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\basepage.py:49: in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"84e5264b8fa7ebf52a13e7519463f37e\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x00000255DD30D7C0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "点击General-FAQs常见问题项",
      "time" : {
        "start" : 1637660457735,
        "stop" : 1637660459282,
        "duration" : 1547
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    }, {
      "name" : "输入搜索关键字",
      "time" : {
        "start" : 1637660459282,
        "stop" : 1637660459358,
        "duration" : 76
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "search",
        "value" : "'adggwgwdqw'"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    }, {
      "name" : "点击搜索按钮",
      "time" : {
        "start" : 1637660459358,
        "stop" : 1637660490577,
        "duration" : 31219
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    }, {
      "name" : "判断是否弹出搜索结果为空的提示信息",
      "time" : {
        "start" : 1637660490577,
        "stop" : 1637660522263,
        "duration" : 31686
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"D:\\auto_test_iMyMac\\pytest_project\\page_object\\faq\\faqs_page.py\", line 55, in return_fail_search\n    return self.find_element(faqs['no-results']) is not None\n  File \"D:\\auto_test_iMyMac\\pytest_project\\page\\basepage.py\", line 49, in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n  File \"D:\\auto_test_iMyMac\\pytest_project\\page\\basepage.py\", line 40, in element_locator\n    return func(cm.LOCATE_MODE[name], value)\n  File \"D:\\auto_test_iMyMac\\pytest_project\\page\\basepage.py\", line 49, in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n  File \"c:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    }, {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1637660522671,
        "stop" : 1637660522806,
        "duration" : 135
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "4fb2d4b3243d86a",
        "name" : "失败截图",
        "source" : "4fb2d4b3243d86a.png",
        "type" : "image/png",
        "size" : 10592
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    } ],
    "attachments" : [ {
      "uid" : "d85bd59659448926",
      "name" : "log",
      "source" : "d85bd59659448926.txt",
      "type" : "text/plain",
      "size" : 543
    }, {
      "uid" : "88105d8010e9cda5",
      "name" : "stderr",
      "source" : "88105d8010e9cda5.txt",
      "type" : "text/plain",
      "size" : 592
    } ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 3
  },
  "afterStages" : [ {
    "name" : "drivers::0",
    "time" : {
      "start" : 1637661252250,
      "stop" : 1637661254329,
      "duration" : 2079
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "搜索文章，关键字为==》adggwgwdqw"
  }, {
    "name" : "severity",
    "value" : "minor"
  }, {
    "name" : "story",
    "value" : "各个模块常见问题测试"
  }, {
    "name" : "feature",
    "value" : "FAQ页面测试"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.skipif(False, reason='阿里云没有VPN')"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase.faq_test_case"
  }, {
    "name" : "suite",
    "value" : "test_index"
  }, {
    "name" : "subSuite",
    "value" : "TestBody"
  }, {
    "name" : "host",
    "value" : "DESKTOP-9RE2F6C"
  }, {
    "name" : "thread",
    "value" : "22336-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.faq_test_case.test_index"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "faq_name",
    "value" : "'General-FAQs'"
  }, {
    "name" : "search",
    "value" : "'adggwgwdqw'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "搜索文章，关键字为==》adggwgwdqw", "@pytest.mark.skipif(False, reason='阿里云没有VPN')" ]
  },
  "source" : "b67ca44f0a5ce248.json",
  "parameterValues" : [ "'General-FAQs'", "'adggwgwdqw'" ]
}