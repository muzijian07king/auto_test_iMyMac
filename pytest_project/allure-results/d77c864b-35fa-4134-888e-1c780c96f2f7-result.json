{"name": "标签栏测试", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <pytest_project.TestCase.resource_test_case.test_resource.TestBody object at 0x000001F3F4A42790>\ntopics = 'Cleaner'\n\n>   ???\n\nD:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\TestCase\\resource_test_case\\test_resource.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\source\\source_page.py:29: in click_topics\n    self.is_click(get_any_key_info(topics, resource.data))\npage\\basepage.py:89: in is_click\n    self.find_element(loc).click()\npage\\basepage.py:49: in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\npage\\basepage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\basepage.py:49: in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3ac482f591c7f7c696de8cb40b8c3deb\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000001F3F4A42070>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "description": "标签栏功能测试", "steps": [{"name": "点击左侧的标签", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"c:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"D:\\auto_test_iMyMac\\pytest_project\\page_object\\source\\source_page.py\", line 29, in click_topics\n    self.is_click(get_any_key_info(topics, resource.data))\n  File \"D:\\auto_test_iMyMac\\pytest_project\\page\\basepage.py\", line 89, in is_click\n    self.find_element(loc).click()\n  File \"D:\\auto_test_iMyMac\\pytest_project\\page\\basepage.py\", line 49, in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n  File \"D:\\auto_test_iMyMac\\pytest_project\\page\\basepage.py\", line 40, in element_locator\n    return func(cm.LOCATE_MODE[name], value)\n  File \"D:\\auto_test_iMyMac\\pytest_project\\page\\basepage.py\", line 49, in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n  File \"c:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "topics", "value": "'Cleaner'"}], "start": 1637223381284, "stop": 1637223411625}, {"name": "添加失败截图...", "status": "passed", "attachments": [{"name": "失败截图", "source": "9503709b-8d30-468e-a6cc-84d7798cc6fc-attachment.png", "type": "image/png"}], "start": 1637223411764, "stop": 1637223411881}], "attachments": [{"name": "log", "source": "1865031f-bf79-481b-ae5f-9a983138d3a4-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "2ae87192-4779-418a-bb94-3c690cb5d5f4-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "topics", "value": "'Cleaner'"}], "start": 1637223381284, "stop": 1637223411625, "uuid": "543f784e-f8fe-4711-8c3e-19213bfaaea0", "historyId": "28ac136cc50ecaf9957b4b2d4e93d4e6", "testCaseId": "178d7acf545024aded0c07ff93a4b6d4", "fullName": "TestCase.resource_test_case.test_resource.TestBody#test_003", "labels": [{"name": "tag", "value": "点击标签==》Cleaner"}, {"name": "story", "value": "文章搜索页面功能测试"}, {"name": "severity", "value": "critical"}, {"name": "feature", "value": "文章搜索页面测试"}, {"name": "parentSuite", "value": "TestCase.resource_test_case"}, {"name": "suite", "value": "test_resource"}, {"name": "subSuite", "value": "TestBody"}, {"name": "host", "value": "DESKTOP-9RE2F6C"}, {"name": "thread", "value": "14392-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.resource_test_case.test_resource"}]}