{"name": "切换个人永久套餐测试", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <pytest_project.TestCase.store_test_case.test_buy_option.TestBody object at 0x0000023B8EE4C730>\n\n>   ???\n\nD:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\TestCase\\store_test_case\\test_buy_option.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\store\\buy_page.py:58: in is_buy_single\n    return self.getAttribute(buy['selectButton'], 'class') == 'selectButton' and \\\npage\\basepage.py:133: in getAttribute\n    attr = self.find_element(loc)\npage\\basepage.py:49: in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\npage\\basepage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\basepage.py:49: in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"36a2a6933c874cebaeacf7786b334b5b\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x0000023B8EDC2D90>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "description": "切换个人永久套餐功能测试", "steps": [{"name": "点击pmm的更多选项按钮", "status": "passed", "start": 1637223427614, "stop": 1637223428774}, {"name": "切换购买个人永久套餐按钮", "status": "passed", "start": 1637223428774, "stop": 1637223430861}, {"name": "判断是否切换购买个人永久套餐成功", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"D:\\auto_test_iMyMac\\pytest_project\\page_object\\store\\buy_page.py\", line 58, in is_buy_single\n    return self.getAttribute(buy['selectButton'], 'class') == 'selectButton' and \\\n  File \"D:\\auto_test_iMyMac\\pytest_project\\page\\basepage.py\", line 133, in getAttribute\n    attr = self.find_element(loc)\n  File \"D:\\auto_test_iMyMac\\pytest_project\\page\\basepage.py\", line 49, in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n  File \"D:\\auto_test_iMyMac\\pytest_project\\page\\basepage.py\", line 40, in element_locator\n    return func(cm.LOCATE_MODE[name], value)\n  File \"D:\\auto_test_iMyMac\\pytest_project\\page\\basepage.py\", line 49, in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n  File \"c:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1637223430861, "stop": 1637223462447}, {"name": "添加失败截图...", "status": "passed", "attachments": [{"name": "失败截图", "source": "45a0218a-c36c-44d5-bb51-f2162548ed86-attachment.png", "type": "image/png"}], "start": 1637223462602, "stop": 1637223462754}], "attachments": [{"name": "log", "source": "e5aff2c3-ae27-47b9-b843-88ac19a73cb8-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "acfe72d5-c80f-4a1d-9cdf-4af7bedb0fdc-attachment.txt", "type": "text/plain"}], "start": 1637223427614, "stop": 1637223462447, "uuid": "6f369fb4-0cd4-41a3-90d4-947b925acac2", "historyId": "3584c46ea446d6c75e98e8ab46b24d55", "testCaseId": "b145beab7d3eb92a1cf1ceac53729162", "fullName": "TestCase.store_test_case.test_buy_option.TestBody#test_010", "labels": [{"name": "tag", "value": "切换套餐"}, {"name": "story", "value": "套餐购买页面内容测试"}, {"name": "severity", "value": "blocker"}, {"name": "feature", "value": "Store页面测试"}, {"name": "parentSuite", "value": "TestCase.store_test_case"}, {"name": "suite", "value": "test_buy_option"}, {"name": "subSuite", "value": "TestBody"}, {"name": "host", "value": "DESKTOP-9RE2F6C"}, {"name": "thread", "value": "20288-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.store_test_case.test_buy_option"}]}