{
  "uid" : "3a5c9cdeee0a2af7",
  "name" : "步骤内容测试",
  "fullName" : "TestCase.discount_test_case.test_discount.TestBody#test_001",
  "historyId" : "6d5d75c8be15661990ec0d9f7489b91f",
  "time" : {
    "start" : 1637046977662,
    "stop" : 1637046988206,
    "duration" : 10544
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <pytest_project.TestCase.discount_test_case.test_discount.TestBody object at 0x000002A36A865880>\nstep = 'step-2'\ncontext = 'We’ll review your email and verify, then send you a coupon code.'\n\n    @pytest.mark.parametrize('step,context', getExcelAllData('步骤介绍', 'Discount/discount.xlsx'))\n    @allure.title('步骤内容测试')\n    @allure.severity('trivial')\n    def test_001(self, step, context):\n        allure.dynamic.tag('{}==>{}'.format(step, context))\n>       assert self.driver.step_if_ture(step, context)\n\nTestCase\\discount_test_case\\test_discount.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\discount\\discount_page.py:11: in step_if_ture\n    return self.element_txet(get_any_key_info(step, discount.data)) == context\npage\\basepage.py:95: in element_txet\n    _text = self.find_element(loc).text\npage\\basepage.py:49: in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\npage\\basepage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\basepage.py:49: in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eeda365b98f8b4bc7f0abc8d41425308\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000002A36B0C6550>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_verify_url",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046945113,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046945113,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "drivers",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046947725,
      "duration" : 2612
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1637046947726,
      "stop" : 1637046947727,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "open_url",
    "time" : {
      "start" : 1637046977005,
      "stop" : 1637046977661,
      "duration" : 656
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1637046977005,
      "stop" : 1637046977005,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <pytest_project.TestCase.discount_test_case.test_discount.TestBody object at 0x000002A36A865880>\nstep = 'step-2'\ncontext = 'We’ll review your email and verify, then send you a coupon code.'\n\n    @pytest.mark.parametrize('step,context', getExcelAllData('步骤介绍', 'Discount/discount.xlsx'))\n    @allure.title('步骤内容测试')\n    @allure.severity('trivial')\n    def test_001(self, step, context):\n        allure.dynamic.tag('{}==>{}'.format(step, context))\n>       assert self.driver.step_if_ture(step, context)\n\nTestCase\\discount_test_case\\test_discount.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\discount\\discount_page.py:11: in step_if_ture\n    return self.element_txet(get_any_key_info(step, discount.data)) == context\npage\\basepage.py:95: in element_txet\n    _text = self.find_element(loc).text\npage\\basepage.py:49: in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\npage\\basepage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\basepage.py:49: in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eeda365b98f8b4bc7f0abc8d41425308\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000002A36B0C6550>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "判断步骤文案是否正确",
      "time" : {
        "start" : 1637046977662,
        "stop" : 1637046988205,
        "duration" : 10543
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page_object\\discount\\discount_page.py\", line 11, in step_if_ture\n    return self.element_txet(get_any_key_info(step, discount.data)) == context\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 95, in element_txet\n    _text = self.find_element(loc).text\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 49, in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 40, in element_locator\n    return func(cm.LOCATE_MODE[name], value)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 49, in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n  File \"c:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    }, {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1637046988329,
        "stop" : 1637046988449,
        "duration" : 120
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "9682390fb81d650b",
        "name" : "失败截图",
        "source" : "9682390fb81d650b.png",
        "type" : "image/png",
        "size" : 118732
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    } ],
    "attachments" : [ {
      "uid" : "f50b76c964c08e12",
      "name" : "log",
      "source" : "f50b76c964c08e12.txt",
      "type" : "text/plain",
      "size" : 90
    }, {
      "uid" : "6a303917cf4892d3",
      "name" : "stderr",
      "source" : "6a303917cf4892d3.txt",
      "type" : "text/plain",
      "size" : 99
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 3
  },
  "afterStages" : [ {
    "name" : "drivers::0",
    "time" : {
      "start" : 1637048803679,
      "stop" : 1637048805774,
      "duration" : 2095
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "step-2==>We’ll review your email and verify, then send you a coupon code."
  }, {
    "name" : "severity",
    "value" : "trivial"
  }, {
    "name" : "feature",
    "value" : "学生优惠申请页面测试"
  }, {
    "name" : "story",
    "value" : "功能测试"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase.discount_test_case"
  }, {
    "name" : "suite",
    "value" : "test_discount"
  }, {
    "name" : "subSuite",
    "value" : "TestBody"
  }, {
    "name" : "host",
    "value" : "DESKTOP-9RE2F6C"
  }, {
    "name" : "thread",
    "value" : "1832-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.discount_test_case.test_discount"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "context",
    "value" : "'We’ll review your email and verify, then send you a coupon code.'"
  }, {
    "name" : "step",
    "value" : "'step-2'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "step-2==>We’ll review your email and verify, then send you a coupon code." ]
  },
  "source" : "3a5c9cdeee0a2af7.json",
  "parameterValues" : [ "'We’ll review your email and verify, then send you a coupon code.'", "'step-2'" ]
}