{
  "uid" : "2b1175b8237f97f4",
  "name" : "大标题测试",
  "fullName" : "TestCase.policy_test_case.test_policy.TestBody#test_001",
  "historyId" : "d58dc1d923df510b1a4d9f42fc380126",
  "time" : {
    "start" : 1637047256193,
    "stop" : 1637047271539,
    "duration" : 15346
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <pytest_project.TestCase.policy_test_case.test_policy.TestBody object at 0x000002A36B19CA00>\nsheet_name = 'privacy'\n\n    @pytest.mark.parametrize('sheet_name', getSheetNames('Protocol/protocol.xlsx'))\n    @allure.title('大标题测试')\n    def test_001(self, sheet_name):\n        allure.dynamic.tag('{}的标题'.format(sheet_name))\n        self.driver.goto_protocol(sheet_name)\n>       assert self.driver.if_headline(getValueByIndex(1, 2, sheet_name, 'Protocol/protocol.xlsx'))\n\nTestCase\\policy_test_case\\test_policy.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\protocol\\context_page.py:19: in if_headline\n    return self.element_txet(get_any_key_info('title-h1', policy.data)) == title\npage\\basepage.py:95: in element_txet\n    _text = self.find_element(loc).text\npage\\basepage.py:49: in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\npage\\basepage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\basepage.py:49: in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eeda365b98f8b4bc7f0abc8d41425308\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000002A36B191400>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_verify_url",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046945113,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046945113,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "drivers",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046947725,
      "duration" : 2612
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1637046947726,
      "stop" : 1637046947727,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1637047255761,
      "stop" : 1637047255761,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "open_url",
    "time" : {
      "start" : 1637047255761,
      "stop" : 1637047256191,
      "duration" : 430
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <pytest_project.TestCase.policy_test_case.test_policy.TestBody object at 0x000002A36B19CA00>\nsheet_name = 'privacy'\n\n    @pytest.mark.parametrize('sheet_name', getSheetNames('Protocol/protocol.xlsx'))\n    @allure.title('大标题测试')\n    def test_001(self, sheet_name):\n        allure.dynamic.tag('{}的标题'.format(sheet_name))\n        self.driver.goto_protocol(sheet_name)\n>       assert self.driver.if_headline(getValueByIndex(1, 2, sheet_name, 'Protocol/protocol.xlsx'))\n\nTestCase\\policy_test_case\\test_policy.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\protocol\\context_page.py:19: in if_headline\n    return self.element_txet(get_any_key_info('title-h1', policy.data)) == title\npage\\basepage.py:95: in element_txet\n    _text = self.find_element(loc).text\npage\\basepage.py:49: in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\npage\\basepage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\basepage.py:49: in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eeda365b98f8b4bc7f0abc8d41425308\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000002A36B191400>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "打开privacy页面",
      "time" : {
        "start" : 1637047256194,
        "stop" : 1637047260967,
        "duration" : 4773
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    }, {
      "name" : "判断大标题",
      "time" : {
        "start" : 1637047260970,
        "stop" : 1637047271538,
        "duration" : 10568
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page_object\\protocol\\context_page.py\", line 19, in if_headline\n    return self.element_txet(get_any_key_info('title-h1', policy.data)) == title\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 95, in element_txet\n    _text = self.find_element(loc).text\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 49, in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 40, in element_locator\n    return func(cm.LOCATE_MODE[name], value)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 49, in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n  File \"c:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    }, {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1637047271764,
        "stop" : 1637047271926,
        "duration" : 162
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "fbe0b6871bd8428",
        "name" : "失败截图",
        "source" : "fbe0b6871bd8428.png",
        "type" : "image/png",
        "size" : 142394
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    } ],
    "attachments" : [ {
      "uid" : "54da17e9a13faeed",
      "name" : "log",
      "source" : "54da17e9a13faeed.txt",
      "type" : "text/plain",
      "size" : 769
    }, {
      "uid" : "f2da634c104f2b65",
      "name" : "stderr",
      "source" : "f2da634c104f2b65.txt",
      "type" : "text/plain",
      "size" : 834
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 3
  },
  "afterStages" : [ {
    "name" : "drivers::0",
    "time" : {
      "start" : 1637048803679,
      "stop" : 1637048805774,
      "duration" : 2095
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "privacy的标题"
  }, {
    "name" : "story",
    "value" : "文章测试"
  }, {
    "name" : "feature",
    "value" : "协议内容测试"
  }, {
    "name" : "severity",
    "value" : "minor"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase.policy_test_case"
  }, {
    "name" : "suite",
    "value" : "test_policy"
  }, {
    "name" : "subSuite",
    "value" : "TestBody"
  }, {
    "name" : "host",
    "value" : "DESKTOP-9RE2F6C"
  }, {
    "name" : "thread",
    "value" : "1832-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.policy_test_case.test_policy"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "sheet_name",
    "value" : "'privacy'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "minor",
    "retries" : [ {
      "uid" : "5204e19e9a1abe7c",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1637047235227,
        "stop" : 1637047250441,
        "duration" : 15214
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 4,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "237e18c7f6589f6b",
        "reportUrl" : "http://localhost:8080/jenkins/job/selenium_auto_test_IMyMac/27/allure/#testresult/237e18c7f6589f6b",
        "status" : "passed",
        "time" : {
          "start" : 1637045214394,
          "stop" : 1637045219195,
          "duration" : 4801
        }
      }, {
        "uid" : "92653f0ed603d71f",
        "reportUrl" : "http://localhost:8080/jenkins/job/selenium_auto_test_IMyMac/26/allure/#testresult/92653f0ed603d71f",
        "status" : "passed",
        "time" : {
          "start" : 1637043386602,
          "stop" : 1637043391773,
          "duration" : 5171
        }
      }, {
        "uid" : "b2bfc0921dbc92c1",
        "reportUrl" : "http://localhost:8080/jenkins/job/selenium_auto_test_IMyMac/23/allure/#testresult/b2bfc0921dbc92c1",
        "status" : "passed",
        "time" : {
          "start" : 1636967392558,
          "stop" : 1636967404170,
          "duration" : 11612
        }
      }, {
        "uid" : "9c6c9ef01e4551ac",
        "reportUrl" : "http://localhost:8080/jenkins/job/selenium_auto_test_IMyMac/22/allure/#testresult/9c6c9ef01e4551ac",
        "status" : "passed",
        "time" : {
          "start" : 1636940597152,
          "stop" : 1636940601997,
          "duration" : 4845
        }
      } ]
    },
    "tags" : [ "privacy的标题" ]
  },
  "source" : "2b1175b8237f97f4.json",
  "parameterValues" : [ "'privacy'" ]
}