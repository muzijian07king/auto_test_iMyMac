{
  "uid" : "d47711add25e8728",
  "name" : "搜索不到文章测试",
  "fullName" : "TestCase.faq_test_case.test_index.TestBody#test_005",
  "historyId" : "155650d7459040d2398357b8b617e1d4",
  "time" : {
    "start" : 1637047125651,
    "stop" : 1637047137620,
    "duration" : 11969
  },
  "description" : "搜索不到文章功能测试",
  "descriptionHtml" : "<p>搜索不到文章功能测试</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <pytest_project.TestCase.faq_test_case.test_index.TestBody object at 0x000002A36B1392E0>\nfaq_name = 'Mac-Cleaner', search = 'adggwgwdqw'\n\n    @pytest.mark.parametrize('faq_name', get_branch_all_keys().get_branch_all_keys(faq.data, 'FAQS'))\n    @pytest.mark.parametrize('search', getExcelOneCol('搜索不到文章', 1, 'Support/support.xlsx'))\n    @allure.title('搜索不到文章测试')\n    @allure.severity('minor')\n    def test_005(self, faq_name, search):\n        \"\"\"搜索不到文章功能测试\"\"\"\n        allure.dynamic.tag('搜索文章，关键字为==》{}'.format(search))\n        self.driver.go_to_faq(faq_name)\n>       self.driver.search_input(search)\n\nTestCase\\faq_test_case\\test_index.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\faq\\faqs_page.py:40: in search_input\n    self.input_text(faqs['search-input'], search)\npage\\basepage.py:79: in input_text\n    ele = self.find_element(loc)\npage\\basepage.py:49: in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\npage\\basepage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\basepage.py:49: in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eeda365b98f8b4bc7f0abc8d41425308\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000002A36B146280>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_verify_url",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046945113,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046945113,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "drivers",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046947725,
      "duration" : 2612
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1637046947726,
      "stop" : 1637046947727,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "open_url",
    "time" : {
      "start" : 1637047125324,
      "stop" : 1637047125651,
      "duration" : 327
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1637047125324,
      "stop" : 1637047125324,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "搜索不到文章功能测试",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <pytest_project.TestCase.faq_test_case.test_index.TestBody object at 0x000002A36B1392E0>\nfaq_name = 'Mac-Cleaner', search = 'adggwgwdqw'\n\n    @pytest.mark.parametrize('faq_name', get_branch_all_keys().get_branch_all_keys(faq.data, 'FAQS'))\n    @pytest.mark.parametrize('search', getExcelOneCol('搜索不到文章', 1, 'Support/support.xlsx'))\n    @allure.title('搜索不到文章测试')\n    @allure.severity('minor')\n    def test_005(self, faq_name, search):\n        \"\"\"搜索不到文章功能测试\"\"\"\n        allure.dynamic.tag('搜索文章，关键字为==》{}'.format(search))\n        self.driver.go_to_faq(faq_name)\n>       self.driver.search_input(search)\n\nTestCase\\faq_test_case\\test_index.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\faq\\faqs_page.py:40: in search_input\n    self.input_text(faqs['search-input'], search)\npage\\basepage.py:79: in input_text\n    ele = self.find_element(loc)\npage\\basepage.py:49: in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\npage\\basepage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\basepage.py:49: in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eeda365b98f8b4bc7f0abc8d41425308\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000002A36B146280>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "点击Mac-Cleaner常见问题项",
      "time" : {
        "start" : 1637047125652,
        "stop" : 1637047127077,
        "duration" : 1425
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    }, {
      "name" : "输入搜索关键字",
      "time" : {
        "start" : 1637047127077,
        "stop" : 1637047137619,
        "duration" : 10542
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"c:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page_object\\faq\\faqs_page.py\", line 40, in search_input\n    self.input_text(faqs['search-input'], search)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 79, in input_text\n    ele = self.find_element(loc)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 49, in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 40, in element_locator\n    return func(cm.LOCATE_MODE[name], value)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 49, in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n  File \"c:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "search",
        "value" : "'adggwgwdqw'"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    }, {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1637047137776,
        "stop" : 1637047137908,
        "duration" : 132
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "4c944a8205545a76",
        "name" : "失败截图",
        "source" : "4c944a8205545a76.png",
        "type" : "image/png",
        "size" : 120425
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    } ],
    "attachments" : [ {
      "uid" : "925aee94689f4904",
      "name" : "log",
      "source" : "925aee94689f4904.txt",
      "type" : "text/plain",
      "size" : 195
    }, {
      "uid" : "68264e792b8081c7",
      "name" : "stderr",
      "source" : "68264e792b8081c7.txt",
      "type" : "text/plain",
      "size" : 212
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 3
  },
  "afterStages" : [ {
    "name" : "drivers::0",
    "time" : {
      "start" : 1637048803679,
      "stop" : 1637048805774,
      "duration" : 2095
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "搜索文章，关键字为==》adggwgwdqw"
  }, {
    "name" : "story",
    "value" : "各个模块常见问题测试"
  }, {
    "name" : "feature",
    "value" : "FAQ页面测试"
  }, {
    "name" : "severity",
    "value" : "minor"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase.faq_test_case"
  }, {
    "name" : "suite",
    "value" : "test_index"
  }, {
    "name" : "subSuite",
    "value" : "TestBody"
  }, {
    "name" : "host",
    "value" : "DESKTOP-9RE2F6C"
  }, {
    "name" : "thread",
    "value" : "1832-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.faq_test_case.test_index"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "faq_name",
    "value" : "'Mac-Cleaner'"
  }, {
    "name" : "search",
    "value" : "'adggwgwdqw'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "搜索文章，关键字为==》adggwgwdqw" ]
  },
  "source" : "d47711add25e8728.json",
  "parameterValues" : [ "'Mac-Cleaner'", "'adggwgwdqw'" ]
}