{
  "uid" : "64ed99594f411f80",
  "name" : "标签栏测试",
  "fullName" : "TestCase.resource_test_case.test_resource.TestBody#test_003",
  "historyId" : "28ac136cc50ecaf9957b4b2d4e93d4e6",
  "time" : {
    "start" : 1637047400503,
    "stop" : 1637047411035,
    "duration" : 10532
  },
  "description" : "标签栏功能测试",
  "descriptionHtml" : "<p>标签栏功能测试</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <pytest_project.TestCase.resource_test_case.test_resource.TestBody object at 0x00000191A3A072E0>\ntopics = 'Cleaner'\n\n    @pytest.mark.parametrize('topics', getExcelOneCol('文章标签', 1, 'Resource/resource.xlsx'))\n    @allure.title('标签栏测试')\n    def test_003(self, topics):\n        \"\"\"标签栏功能测试\"\"\"\n        allure.dynamic.tag('点击标签==》{}'.format(topics))\n>       self.driver.click_topics(topics)\n\nTestCase\\resource_test_case\\test_resource.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\source\\source_page.py:29: in click_topics\n    self.is_click(get_any_key_info(topics, resource.data))\npage\\basepage.py:89: in is_click\n    self.find_element(loc).click()\npage\\basepage.py:49: in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\npage\\basepage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\basepage.py:49: in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5f2579f0bcaa0685a7aca00ae6f90dae\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x00000191A39F89D0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "drivers",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046947524,
      "duration" : 2411
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046945113,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046945113,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1637046947525,
      "stop" : 1637046947525,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "open_url",
    "time" : {
      "start" : 1637047399111,
      "stop" : 1637047400502,
      "duration" : 1391
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1637047399111,
      "stop" : 1637047399111,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "标签栏功能测试",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <pytest_project.TestCase.resource_test_case.test_resource.TestBody object at 0x00000191A3A072E0>\ntopics = 'Cleaner'\n\n    @pytest.mark.parametrize('topics', getExcelOneCol('文章标签', 1, 'Resource/resource.xlsx'))\n    @allure.title('标签栏测试')\n    def test_003(self, topics):\n        \"\"\"标签栏功能测试\"\"\"\n        allure.dynamic.tag('点击标签==》{}'.format(topics))\n>       self.driver.click_topics(topics)\n\nTestCase\\resource_test_case\\test_resource.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\source\\source_page.py:29: in click_topics\n    self.is_click(get_any_key_info(topics, resource.data))\npage\\basepage.py:89: in is_click\n    self.find_element(loc).click()\npage\\basepage.py:49: in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\npage\\basepage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\basepage.py:49: in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5f2579f0bcaa0685a7aca00ae6f90dae\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x00000191A39F89D0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "点击左侧的标签",
      "time" : {
        "start" : 1637047400503,
        "stop" : 1637047411035,
        "duration" : 10532
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"c:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page_object\\source\\source_page.py\", line 29, in click_topics\n    self.is_click(get_any_key_info(topics, resource.data))\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 89, in is_click\n    self.find_element(loc).click()\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 49, in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 40, in element_locator\n    return func(cm.LOCATE_MODE[name], value)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 49, in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n  File \"c:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "topics",
        "value" : "'Cleaner'"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    }, {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1637047411180,
        "stop" : 1637047411311,
        "duration" : 131
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "8391f4f114e29412",
        "name" : "失败截图",
        "source" : "8391f4f114e29412.png",
        "type" : "image/png",
        "size" : 187340
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    } ],
    "attachments" : [ {
      "uid" : "292b1dd12c1d33c2",
      "name" : "log",
      "source" : "292b1dd12c1d33c2.txt",
      "type" : "text/plain",
      "size" : 165
    }, {
      "uid" : "47b46176e602165c",
      "name" : "stderr",
      "source" : "47b46176e602165c.txt",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 3
  },
  "afterStages" : [ {
    "name" : "drivers::0",
    "time" : {
      "start" : 1637048791608,
      "stop" : 1637048793756,
      "duration" : 2148
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "点击标签==》Cleaner"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "story",
    "value" : "文章搜索页面功能测试"
  }, {
    "name" : "feature",
    "value" : "文章搜索页面测试"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase.resource_test_case"
  }, {
    "name" : "suite",
    "value" : "test_resource"
  }, {
    "name" : "subSuite",
    "value" : "TestBody"
  }, {
    "name" : "host",
    "value" : "DESKTOP-9RE2F6C"
  }, {
    "name" : "thread",
    "value" : "8092-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.resource_test_case.test_resource"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "topics",
    "value" : "'Cleaner'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ {
      "uid" : "56af691a3e79fb41",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1637047383256,
        "stop" : 1637047393788,
        "duration" : 10532
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 4,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "29d0a13c5eab0846",
        "reportUrl" : "http://localhost:8080/jenkins/job/selenium_auto_test_IMyMac/27/allure/#testresult/29d0a13c5eab0846",
        "status" : "passed",
        "time" : {
          "start" : 1637045220269,
          "stop" : 1637045221919,
          "duration" : 1650
        }
      }, {
        "uid" : "805011c2dbbad601",
        "reportUrl" : "http://localhost:8080/jenkins/job/selenium_auto_test_IMyMac/26/allure/#testresult/805011c2dbbad601",
        "status" : "passed",
        "time" : {
          "start" : 1637043274943,
          "stop" : 1637043276729,
          "duration" : 1786
        }
      }, {
        "uid" : "19553e37d4a516d7",
        "reportUrl" : "http://localhost:8080/jenkins/job/selenium_auto_test_IMyMac/23/allure/#testresult/19553e37d4a516d7",
        "status" : "passed",
        "time" : {
          "start" : 1636967416026,
          "stop" : 1636967417769,
          "duration" : 1743
        }
      }, {
        "uid" : "375f4b53c4e49f1f",
        "reportUrl" : "http://localhost:8080/jenkins/job/selenium_auto_test_IMyMac/22/allure/#testresult/375f4b53c4e49f1f",
        "status" : "passed",
        "time" : {
          "start" : 1636940633934,
          "stop" : 1636940635961,
          "duration" : 2027
        }
      } ]
    },
    "tags" : [ "点击标签==》Cleaner" ]
  },
  "source" : "64ed99594f411f80.json",
  "parameterValues" : [ "'Cleaner'" ]
}