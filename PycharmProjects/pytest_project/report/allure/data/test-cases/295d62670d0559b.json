{
  "uid" : "295d62670d0559b",
  "name" : "进入常见问题页面测试",
  "fullName" : "TestCase.faq_test_case.test_index.TestBody#test_001",
  "historyId" : "bff91cdbf0f1cf881f451cd5e8730fe8",
  "time" : {
    "start" : 1637047025439,
    "stop" : 1637047037580,
    "duration" : 12141
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <pytest_project.TestCase.faq_test_case.test_index.TestBody object at 0x000002A36B123250>\nfaq_name = 'Mac-Cleaner'\n\n    @pytest.mark.parametrize('faq_name', get_branch_all_keys().get_branch_all_keys(faq.data, 'FAQS'))\n    @allure.title('进入常见问题页面测试')\n    def test_001(self, faq_name):\n        allure.dynamic.tag('进入{}的常见问题页面'.format(faq_name))\n        self.driver.go_to_faq(faq_name)\n>       assert self.driver.is_go_to_faq_right(faq_name)\n\nTestCase\\faq_test_case\\test_index.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\faq\\faqs_page.py:17: in is_go_to_faq_right\n    faq_name.replace('-', ' ') in self.element_txet(faqs['faq-title'])\npage\\basepage.py:95: in element_txet\n    _text = self.find_element(loc).text\npage\\basepage.py:49: in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\npage\\basepage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\basepage.py:49: in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eeda365b98f8b4bc7f0abc8d41425308\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000002A36B123340>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_verify_url",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046945113,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046945113,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "drivers",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046947725,
      "duration" : 2612
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1637046947726,
      "stop" : 1637046947727,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "open_url",
    "time" : {
      "start" : 1637047025079,
      "stop" : 1637047025438,
      "duration" : 359
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1637047025079,
      "stop" : 1637047025079,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <pytest_project.TestCase.faq_test_case.test_index.TestBody object at 0x000002A36B123250>\nfaq_name = 'Mac-Cleaner'\n\n    @pytest.mark.parametrize('faq_name', get_branch_all_keys().get_branch_all_keys(faq.data, 'FAQS'))\n    @allure.title('进入常见问题页面测试')\n    def test_001(self, faq_name):\n        allure.dynamic.tag('进入{}的常见问题页面'.format(faq_name))\n        self.driver.go_to_faq(faq_name)\n>       assert self.driver.is_go_to_faq_right(faq_name)\n\nTestCase\\faq_test_case\\test_index.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\faq\\faqs_page.py:17: in is_go_to_faq_right\n    faq_name.replace('-', ' ') in self.element_txet(faqs['faq-title'])\npage\\basepage.py:95: in element_txet\n    _text = self.find_element(loc).text\npage\\basepage.py:49: in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\npage\\basepage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\basepage.py:49: in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eeda365b98f8b4bc7f0abc8d41425308\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000002A36B123340>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "点击Mac-Cleaner常见问题项",
      "time" : {
        "start" : 1637047025439,
        "stop" : 1637047027064,
        "duration" : 1625
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    }, {
      "name" : "判断是否进入对应页面",
      "time" : {
        "start" : 1637047027064,
        "stop" : 1637047037580,
        "duration" : 10516
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page_object\\faq\\faqs_page.py\", line 17, in is_go_to_faq_right\n    faq_name.replace('-', ' ') in self.element_txet(faqs['faq-title'])\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 95, in element_txet\n    _text = self.find_element(loc).text\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 49, in find_element\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 40, in element_locator\n    return func(cm.LOCATE_MODE[name], value)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 49, in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), loc)\n  File \"c:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    }, {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1637047037712,
        "stop" : 1637047037833,
        "duration" : 121
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "7d0606bc611e5b9c",
        "name" : "失败截图",
        "source" : "7d0606bc611e5b9c.png",
        "type" : "image/png",
        "size" : 120425
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    } ],
    "attachments" : [ {
      "uid" : "fac9ea630a74904d",
      "name" : "log",
      "source" : "fac9ea630a74904d.txt",
      "type" : "text/plain",
      "size" : 391
    }, {
      "uid" : "bb63a697a5918f15",
      "name" : "stderr",
      "source" : "bb63a697a5918f15.txt",
      "type" : "text/plain",
      "size" : 424
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 3
  },
  "afterStages" : [ {
    "name" : "drivers::0",
    "time" : {
      "start" : 1637048803679,
      "stop" : 1637048805774,
      "duration" : 2095
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "进入Mac-Cleaner的常见问题页面"
  }, {
    "name" : "story",
    "value" : "各个模块常见问题测试"
  }, {
    "name" : "feature",
    "value" : "FAQ页面测试"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase.faq_test_case"
  }, {
    "name" : "suite",
    "value" : "test_index"
  }, {
    "name" : "subSuite",
    "value" : "TestBody"
  }, {
    "name" : "host",
    "value" : "DESKTOP-9RE2F6C"
  }, {
    "name" : "thread",
    "value" : "1832-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.faq_test_case.test_index"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "faq_name",
    "value" : "'Mac-Cleaner'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "862a2cf7e1d52147",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1637047007048,
        "stop" : 1637047019815,
        "duration" : 12767
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 4,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "73c8246ec5ef98cb",
        "reportUrl" : "http://localhost:8080/jenkins/job/selenium_auto_test_IMyMac/27/allure/#testresult/73c8246ec5ef98cb",
        "status" : "passed",
        "time" : {
          "start" : 1637045090296,
          "stop" : 1637045092143,
          "duration" : 1847
        }
      }, {
        "uid" : "4326a9eb92c7797b",
        "reportUrl" : "http://localhost:8080/jenkins/job/selenium_auto_test_IMyMac/26/allure/#testresult/4326a9eb92c7797b",
        "status" : "passed",
        "time" : {
          "start" : 1637042956388,
          "stop" : 1637042959010,
          "duration" : 2622
        }
      }, {
        "uid" : "52fe9daab8ed715b",
        "reportUrl" : "http://localhost:8080/jenkins/job/selenium_auto_test_IMyMac/23/allure/#testresult/52fe9daab8ed715b",
        "status" : "passed",
        "time" : {
          "start" : 1636967279065,
          "stop" : 1636967281818,
          "duration" : 2753
        }
      }, {
        "uid" : "d712e43d934f1f7",
        "reportUrl" : "http://localhost:8080/jenkins/job/selenium_auto_test_IMyMac/22/allure/#testresult/d712e43d934f1f7",
        "status" : "passed",
        "time" : {
          "start" : 1636940505784,
          "stop" : 1636940507549,
          "duration" : 1765
        }
      } ]
    },
    "tags" : [ "进入Mac-Cleaner的常见问题页面" ]
  },
  "source" : "295d62670d0559b.json",
  "parameterValues" : [ "'Mac-Cleaner'" ]
}