{
  "uid" : "6fa7aa66336c8a9f",
  "name" : "小标题测试",
  "fullName" : "TestCase.policy_test_case.test_policy.TestBody#test_002",
  "historyId" : "c5039dc35a05e6e4401c0230390721b6",
  "time" : {
    "start" : 1637047392770,
    "stop" : 1637047408456,
    "duration" : 15686
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <pytest_project.TestCase.policy_test_case.test_policy.TestBody object at 0x0000026AEB1C70A0>\nsheet_name = 'refund'\n\n    @allure.title('小标题测试')\n    @pytest.mark.parametrize('sheet_name', getSheetNames('Protocol/protocol.xlsx'))\n    def test_002(self, sheet_name):\n        allure.dynamic.tag('{}的标题'.format(sheet_name))\n        self.driver.goto_protocol(sheet_name)\n>       assert self.driver.if_title(getExcelOneCol(sheet_name, 2, 'Protocol/protocol.xlsx'))\n\nTestCase\\policy_test_case\\test_policy.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\protocol\\context_page.py:15: in if_title\n    return self.elements_text(get_any_key_info('title-l', policy.data)) == title\npage\\basepage.py:207: in elements_text\n    ele = self.find_elements(loc)\npage\\basepage.py:62: in find_elements\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_all_elements_located(args)), loc)\npage\\basepage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\basepage.py:62: in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_all_elements_located(args)), loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"edfa82b985453c34a269236fa9d0f61b\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_all_elements_located object at 0x0000026AEB1C13D0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "base_url",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046945113,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "drivers",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046947894,
      "duration" : 2781
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1637046945113,
      "stop" : 1637046945113,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1637046947894,
      "stop" : 1637046947894,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1637047392650,
      "stop" : 1637047392650,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "open_url",
    "time" : {
      "start" : 1637047392651,
      "stop" : 1637047392770,
      "duration" : 119
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <pytest_project.TestCase.policy_test_case.test_policy.TestBody object at 0x0000026AEB1C70A0>\nsheet_name = 'refund'\n\n    @allure.title('小标题测试')\n    @pytest.mark.parametrize('sheet_name', getSheetNames('Protocol/protocol.xlsx'))\n    def test_002(self, sheet_name):\n        allure.dynamic.tag('{}的标题'.format(sheet_name))\n        self.driver.goto_protocol(sheet_name)\n>       assert self.driver.if_title(getExcelOneCol(sheet_name, 2, 'Protocol/protocol.xlsx'))\n\nTestCase\\policy_test_case\\test_policy.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\protocol\\context_page.py:15: in if_title\n    return self.elements_text(get_any_key_info('title-l', policy.data)) == title\npage\\basepage.py:207: in elements_text\n    ele = self.find_elements(loc)\npage\\basepage.py:62: in find_elements\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_all_elements_located(args)), loc)\npage\\basepage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\npage\\basepage.py:62: in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_all_elements_located(args)), loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"edfa82b985453c34a269236fa9d0f61b\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_all_elements_located object at 0x0000026AEB1C13D0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "打开refund页面",
      "time" : {
        "start" : 1637047392770,
        "stop" : 1637047397917,
        "duration" : 5147
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    }, {
      "name" : "判断小标题",
      "time" : {
        "start" : 1637047397920,
        "stop" : 1637047408456,
        "duration" : 10536
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page_object\\protocol\\context_page.py\", line 15, in if_title\n    return self.elements_text(get_any_key_info('title-l', policy.data)) == title\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 207, in elements_text\n    ele = self.find_elements(loc)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 62, in find_elements\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_all_elements_located(args)), loc)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 40, in element_locator\n    return func(cm.LOCATE_MODE[name], value)\n  File \"D:\\auto_test_iMyMac\\PycharmProjects\\pytest_project\\page\\basepage.py\", line 62, in <lambda>\n    WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_all_elements_located(args)), loc)\n  File \"c:\\users\\123\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    }, {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1637047408608,
        "stop" : 1637047408744,
        "duration" : 136
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "3db5c5fbef5fecc1",
        "name" : "失败截图",
        "source" : "3db5c5fbef5fecc1.png",
        "type" : "image/png",
        "size" : 144584
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    } ],
    "attachments" : [ {
      "uid" : "5f3ec40201a76ade",
      "name" : "log",
      "source" : "5f3ec40201a76ade.txt",
      "type" : "text/plain",
      "size" : 769
    }, {
      "uid" : "33474b64a62a7751",
      "name" : "stderr",
      "source" : "33474b64a62a7751.txt",
      "type" : "text/plain",
      "size" : 834
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 3
  },
  "afterStages" : [ {
    "name" : "drivers::0",
    "time" : {
      "start" : 1637048786165,
      "stop" : 1637048788278,
      "duration" : 2113
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "refund的标题"
  }, {
    "name" : "story",
    "value" : "文章测试"
  }, {
    "name" : "severity",
    "value" : "minor"
  }, {
    "name" : "feature",
    "value" : "协议内容测试"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase.policy_test_case"
  }, {
    "name" : "suite",
    "value" : "test_policy"
  }, {
    "name" : "subSuite",
    "value" : "TestBody"
  }, {
    "name" : "host",
    "value" : "DESKTOP-9RE2F6C"
  }, {
    "name" : "thread",
    "value" : "19400-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.policy_test_case.test_policy"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "sheet_name",
    "value" : "'refund'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "minor",
    "retries" : [ {
      "uid" : "ca0f120dd681ac3d",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1637047370490,
        "stop" : 1637047387378,
        "duration" : 16888
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 4,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "f313cf46f05ad619",
        "reportUrl" : "http://localhost:8080/jenkins/job/selenium_auto_test_IMyMac/27/allure/#testresult/f313cf46f05ad619",
        "status" : "passed",
        "time" : {
          "start" : 1637045208299,
          "stop" : 1637045213208,
          "duration" : 4909
        }
      }, {
        "uid" : "b371cc08ebf5b5cd",
        "reportUrl" : "http://localhost:8080/jenkins/job/selenium_auto_test_IMyMac/26/allure/#testresult/b371cc08ebf5b5cd",
        "status" : "passed",
        "time" : {
          "start" : 1637043069787,
          "stop" : 1637043074431,
          "duration" : 4644
        }
      }, {
        "uid" : "e9bf7cb6ac5dd01a",
        "reportUrl" : "http://localhost:8080/jenkins/job/selenium_auto_test_IMyMac/23/allure/#testresult/e9bf7cb6ac5dd01a",
        "status" : "passed",
        "time" : {
          "start" : 1636967438923,
          "stop" : 1636967444204,
          "duration" : 5281
        }
      }, {
        "uid" : "2b5b1174baf9c950",
        "reportUrl" : "http://localhost:8080/jenkins/job/selenium_auto_test_IMyMac/22/allure/#testresult/2b5b1174baf9c950",
        "status" : "passed",
        "time" : {
          "start" : 1636940612874,
          "stop" : 1636940617685,
          "duration" : 4811
        }
      } ]
    },
    "tags" : [ "refund的标题" ]
  },
  "source" : "6fa7aa66336c8a9f.json",
  "parameterValues" : [ "'refund'" ]
}